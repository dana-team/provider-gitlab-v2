---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: groupmemberships.gitlab-v2.m.crossplane.io
spec:
  group: gitlab-v2.m.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gitlab-v2.m
    kind: GroupMembership
    listKind: GroupMembershipList
    plural: groupmemberships
    singular: groupmembership
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'GroupMembership is the Schema for the GroupMemberships API.
          The gitlab_group_membership resource allows to manage the lifecycle of a
          users group membership. -> If a group should grant membership to another
          group use the gitlab_group_share_group resource instead. Upstream API: GitLab
          REST API docs https://docs.gitlab.com/api/members/'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GroupMembershipSpec defines the desired state of GroupMembership
            properties:
              forProvider:
                properties:
                  accessLevel:
                    description: |-
                      (String) Access level for the member. Valid values are: no one, minimal, guest, planner, reporter, developer, maintainer, owner.
                      Access level for the member. Valid values are: `no one`, `minimal`, `guest`, `planner`, `reporter`, `developer`, `maintainer`, `owner`.
                    type: string
                  expiresAt:
                    description: |-
                      MM-DD
                      Expiration date for the group membership. Format: `YYYY-MM-DD`
                    type: string
                  groupId:
                    description: |-
                      (Number) The ID of the group.
                      The ID of the group.
                    type: number
                  memberRoleId:
                    description: |-
                      (Number) The ID of a custom member role. Only available for Ultimate instances.
                      The ID of a custom member role. Only available for Ultimate instances.
                    type: number
                  skipSubresourcesOnDestroy:
                    description: |-
                      (Boolean) Whether the deletion of direct memberships of the removed member in subgroups and projects should be skipped. Only used during a destroy.
                      Whether the deletion of direct memberships of the removed member in subgroups and projects should be skipped. Only used during a destroy.
                    type: boolean
                  unassignIssuablesOnDestroy:
                    description: |-
                      (Boolean) Whether the removed member should be unassigned from any issues or merge requests inside a given group or project. Only used during a destroy.
                      Whether the removed member should be unassigned from any issues or merge requests inside a given group or project. Only used during a destroy.
                    type: boolean
                  userId:
                    description: |-
                      (Number) The ID of the user.
                      The ID of the user.
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessLevel:
                    description: |-
                      (String) Access level for the member. Valid values are: no one, minimal, guest, planner, reporter, developer, maintainer, owner.
                      Access level for the member. Valid values are: `no one`, `minimal`, `guest`, `planner`, `reporter`, `developer`, `maintainer`, `owner`.
                    type: string
                  expiresAt:
                    description: |-
                      MM-DD
                      Expiration date for the group membership. Format: `YYYY-MM-DD`
                    type: string
                  groupId:
                    description: |-
                      (Number) The ID of the group.
                      The ID of the group.
                    type: number
                  memberRoleId:
                    description: |-
                      (Number) The ID of a custom member role. Only available for Ultimate instances.
                      The ID of a custom member role. Only available for Ultimate instances.
                    type: number
                  skipSubresourcesOnDestroy:
                    description: |-
                      (Boolean) Whether the deletion of direct memberships of the removed member in subgroups and projects should be skipped. Only used during a destroy.
                      Whether the deletion of direct memberships of the removed member in subgroups and projects should be skipped. Only used during a destroy.
                    type: boolean
                  unassignIssuablesOnDestroy:
                    description: |-
                      (Boolean) Whether the removed member should be unassigned from any issues or merge requests inside a given group or project. Only used during a destroy.
                      Whether the removed member should be unassigned from any issues or merge requests inside a given group or project. Only used during a destroy.
                    type: boolean
                  userId:
                    description: |-
                      (Number) The ID of the user.
                      The ID of the user.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.accessLevel is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.accessLevel)
                || (has(self.initProvider) && has(self.initProvider.accessLevel))'
            - message: spec.forProvider.groupId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.groupId)
                || (has(self.initProvider) && has(self.initProvider.groupId))'
            - message: spec.forProvider.userId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.userId)
                || (has(self.initProvider) && has(self.initProvider.userId))'
          status:
            description: GroupMembershipStatus defines the observed state of GroupMembership.
            properties:
              atProvider:
                properties:
                  accessLevel:
                    description: |-
                      (String) Access level for the member. Valid values are: no one, minimal, guest, planner, reporter, developer, maintainer, owner.
                      Access level for the member. Valid values are: `no one`, `minimal`, `guest`, `planner`, `reporter`, `developer`, `maintainer`, `owner`.
                    type: string
                  expiresAt:
                    description: |-
                      MM-DD
                      Expiration date for the group membership. Format: `YYYY-MM-DD`
                    type: string
                  groupId:
                    description: |-
                      (Number) The ID of the group.
                      The ID of the group.
                    type: number
                  id:
                    description: id:user-id>.
                    type: string
                  memberRoleId:
                    description: |-
                      (Number) The ID of a custom member role. Only available for Ultimate instances.
                      The ID of a custom member role. Only available for Ultimate instances.
                    type: number
                  skipSubresourcesOnDestroy:
                    description: |-
                      (Boolean) Whether the deletion of direct memberships of the removed member in subgroups and projects should be skipped. Only used during a destroy.
                      Whether the deletion of direct memberships of the removed member in subgroups and projects should be skipped. Only used during a destroy.
                    type: boolean
                  unassignIssuablesOnDestroy:
                    description: |-
                      (Boolean) Whether the removed member should be unassigned from any issues or merge requests inside a given group or project. Only used during a destroy.
                      Whether the removed member should be unassigned from any issues or merge requests inside a given group or project. Only used during a destroy.
                    type: boolean
                  userId:
                    description: |-
                      (Number) The ID of the user.
                      The ID of the user.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
